<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.ppm.mes.domain.sa.sa400.SalesMapper">
 
    <select id="header" resultType="salesVO" parameterType="hashMap" statementType="PREPARED"> 
    /*com.ppm.mes.domain.sa.sa400.SalesMapper.header*/   
	   	SELECT A.COMPANY company,
		       A.SLIP_CD slipCd,
		       A.SLIP_DT slipDt,
		       A.SA_DT saDt,
		       D.CUST_CD custCd, 
		       D.CUST_NM custNm,
		       A.USER_CD userCd,
			   E.USER_NM userNm,
		       A.SURTAX_YN surtaxYn,
		       A.REMARK remark,
	           (SELECT COUNT(DISTINCT Z.ITEM_CD) FROM TB_MES_SA410 Z WHERE Z.COMPANY = A.COMPANY AND Z.SLIP_CD = A.SLIP_CD) sumItemQty,
				(SELECT SUM(Z.UNIT_AMT) FROM TB_MES_SA410 Z WHERE Z.COMPANY = A.COMPANY AND Z.SLIP_CD = A.SLIP_CD) sumUnitPrice,
				(SELECT SUM(Z.SUPPLY_AMT) FROM TB_MES_SA410 Z WHERE Z.COMPANY = A.COMPANY AND Z.SLIP_CD = A.SLIP_CD) sumSupplyPrice,
				(SELECT SUM(Z.SURTAX_AMT) FROM TB_MES_SA410 Z WHERE Z.COMPANY = A.COMPANY AND Z.SLIP_CD = A.SLIP_CD) sumSurtax,
				(SELECT SUM(Z.TOTAL_AMT) FROM TB_MES_SA410 Z WHERE Z.COMPANY = A.COMPANY AND Z.SLIP_CD = A.SLIP_CD) sumTotalPrice,  
	           A.UPDATED_AT updatedAt,
	           A.UPDATED_BY updatedBy
			FROM TB_MES_SA400 A 
            LEFT JOIN TB_MES_CUST000 D
	            ON A.COMPANY = D.COMPANY 
	            AND A.CUST_CD = D.CUST_CD 
            LEFT OUTER JOIN TB_MES_USER000 E
				ON A.USER_CD = E.USER_CD 
            WHERE 1=1	    
	    
		 <if test="map.company != null and map.company != ''">
			<![CDATA[  
      			AND   A.COMPANY = #{map.company}
  			]]>
	    </if>
	    
		 <if test="map.custCd != null and map.custCd != ''">
			<![CDATA[  
      			AND   A.CUST_CD LIKE UPPER(CONCAT('%',#{map.custCd},'%'))
  			]]>
	    </if>
	    		
		 <if test="map.userCd != null and map.userCd != ''">
			<![CDATA[  
      			AND A.USER_CD LIKE UPPER(CONCAT('%',#{map.userCd},'%'))
  			]]>
	    </if>
	    
		 <if test="map.fromDate != null and map.fromDate != ''">
			<![CDATA[  
      			AND   A.SA_DT >= #{map.fromDate}
  			]]>
	    </if>
		
		 <if test="map.toDate != null and map.toDate != ''">
			<![CDATA[  
      			AND   A.SA_DT <= #{map.toDate}
  			]]>
	    </if>
		
		 <if test="map.slipCd != null and map.slipCd != ''">
			<![CDATA[  
      			AND A.SLIP_CD = #{map.slipCd}
  			]]>
	    </if>	    
	    
	    
		 <if test="map.itemCd != null and map.itemCd != ''">
			<![CDATA[  
      			AND A.SLIP_CD IN (SELECT SLIP_CD FROM TB_MES_SA410 WHERE ITEM_CD LIKE UPPER(CONCAT('%',#{map.itemCd},'%')))
  			]]>
	    </if>
	    
		 <if test="map.custNm != null and map.custNm != ''">
			<![CDATA[  
	      		AND   D.CUST_NM LIKE UPPER(CONCAT('%',#{map.custNm},'%'))
  			]]>
	    </if>
	    
	    
		 <if test="map.userNm != null and map.userNm != ''">
			<![CDATA[  
      			AND E.USER_NM LIKE UPPER(CONCAT('%',#{map.userNm},'%'))
  			]]>
	    </if>    	
		  		
		
		 <if test="map.itemNm != null and map.itemNm != ''">
			<![CDATA[  
      			AND A.SLIP_CD IN (SELECT SLIP_CD FROM TB_MES_SA410 WHERE ITEM_CD IN ( SELECT ITEM_CD FROM TB_MES_ITEM000 WHERE ITEM_NM LIKE UPPER(CONCAT('%',#{map.itemNm},'%'))))
  			]]>
	    </if>
	    
		 <if test="map.partNo != null and map.partNo != ''">
			<![CDATA[  
      			AND A.SLIP_CD IN (SELECT SLIP_CD FROM TB_MES_SA410 WHERE ITEM_CD IN ( SELECT ITEM_CD FROM TB_MES_ITEM000 WHERE PART_NO LIKE UPPER(CONCAT('%',#{map.partNo},'%'))))
  			]]>
	    </if>
	    
	    ORDER BY A.UPDATED_AT DESC
    </select>
    
    <select id="itemDetail" resultType="salesVO" parameterType="hashMap" statementType="PREPARED">
    /*com.ppm.mes.domain.sa.sa400.SalesMapper.itemDetail*/    
    	SELECT 
    	   C.COMPANY company,
    	   C.SLIP_CD slipCd,
	       C.SLIP_DT slipDt,
	       C.SA_DT saDt,
	       F.CUST_CD custCd,
	       F.CUST_NM custNm,
	       C.SURTAX_YN surtaxYn,
	       A.SLIP_SEQ slipSeq,
	       A.ITEM_CD itemCd,
	       D.ITEM_NM	itemNm,
	       D.PART_NO partNo,
	       D.SPEC spec,
           D.UNIT unit,
	       A.ITEM_QTY itemQty,
	       A.UNIT_AMT unitAmt,
	       A.SUPPLY_AMT supplyAmt,
	       A.SURTAX_AMT surtaxAmt,
	       A.TOTAL_AMT totalAmt,
	       C.REMARK remark,
	       A.ITEM_REMARK itemRemark,
	       A.REF_SLIP_CD refSlipCd,
	       A.REF_SLIP_SEQ refSlipSeq
		FROM TB_MES_SA410 A 
		INNER JOIN TB_MES_SA400 C
			ON A.COMPANY = C.COMPANY
			AND A.SLIP_CD = C.SLIP_CD 
   		INNER JOIN TB_MES_ITEM000 D
	   		ON A.COMPANY = D.COMPANY
			AND A.ITEM_CD = D.ITEM_CD 
        LEFT JOIN TB_MES_CUST000 F
	        ON C.COMPANY = F.COMPANY
	        AND C.CUST_CD = F.CUST_CD 
        LEFT OUTER JOIN TB_MES_USER000 G
			ON C.USER_CD = G.USER_CD 
        WHERE 1=1
	    
		 <if test="map.company != null and map.company != ''">
			<![CDATA[  
      			AND   C.COMPANY = #{map.company}
  			]]>
	    </if>
			    
		 <if test="map.custCd != null and map.custCd != ''">
			<![CDATA[  
      			AND   C.CUST_CD LIKE UPPER(CONCAT('%',#{map.custCd},'%'))
  			]]>
	    </if>
	    		
		 <if test="map.userCd != null and map.userCd != ''">
			<![CDATA[  
      			AND C.USER_CD LIKE UPPER(CONCAT('%',#{map.userCd},'%'))
  			]]>
	    </if>
	    
		
		 <if test="map.fromDate != null and map.fromDate != ''">
			<![CDATA[  
      			AND   C.SA_DT >= #{map.fromDate}
  			]]>
	    </if>
		
		 <if test="map.toDate != null and map.toDate != ''">
			<![CDATA[  
      			AND   C.SA_DT <= #{map.toDate}
  			]]>
	    </if>
	    
		 <if test="map.slipCd != null and map.slipCd != ''">
			<![CDATA[  
      			AND C.SLIP_CD = #{map.slipCd}
  			]]>
	    </if>
		
	    
		 <if test="map.itemCd != null and map.itemCd != ''">
			<![CDATA[  
      			AND A.ITEM_CD LIKE UPPER(CONCAT('%',#{map.itemCd},'%'))
  			]]>
	    </if>
	    
	    
		 <if test="map.userNm != null and map.userNm != ''">
			<![CDATA[  
      			AND G.USER_NM LIKE UPPER(CONCAT('%',#{map.userNm},'%'))
  			]]>
	    </if>    
	    
		 <if test="map.custNm != null and map.custNm != ''">
			<![CDATA[  
      			AND F.CUST_NM LIKE UPPER(CONCAT('%',#{map.custNm},'%'))
  			]]>
	    </if>
	    
		 <if test="map.itemNm != null and map.itemNm != ''">
			<![CDATA[  
      			AND D.ITEM_NM  LIKE UPPER(CONCAT('%',#{map.itemNm},'%'))
  			]]>
	    </if>
	    
		 <if test="map.partNo != null and map.partNo != ''">
			<![CDATA[  
      			AND D.PART_NO  LIKE UPPER(CONCAT('%',#{map.partNo},'%'))
  			]]>
	    </if>
	    
	    <if test="map.partNo != null and map.partNo != ''">
			<![CDATA[  
      			AND D.PART_NO  LIKE UPPER(CONCAT('%',#{map.partNo},'%'))
  			]]>
	    </if>
	    
	    
		 <if test="map.refSlipCd != null and map.refSlipCd != ''">
			<![CDATA[  
      			AND A.REF_SLIP_CD = #{map.refSlipCd}
  			]]>
	    </if>
	    
		 <if test="map.refSlipSeq != null and map.refSlipSeq != ''">
			<![CDATA[  
      			AND A.REF_SLIP_SEQ = #{map.refSlipSeq}
  			]]>
	    </if>
	    
	    ORDER BY C.SLIP_CD DESC,A.SLIP_SEQ    
    </select>
    
    
    <!-- 기간별_연별_월 -->
    <select id="itemDetailGroupByYearMon" resultType="salesListVO" parameterType="hashMap" statementType="PREPARED"> 
    /*com.ppm.mes.domain.sa.sa400.SalesMapper.itemDetailGroupByYearMon*/   
    	SELECT 	 saYy,
				 saMm,
				 saAmt
		FROM (
			SELECT 		C.SA_YY saYy,
			    	   	C.SA_MM saMm,
				      	IFNULL(SUM(A.SUPPLY_AMT),0) saAmt
					FROM TB_MES_SA410 A 
					INNER JOIN TB_MES_SA400 B
						ON A.COMPANY = B.COMPANY
						AND A.SLIP_CD = B.SLIP_CD 
				   RIGHT OUTER JOIN
						(  SELECT '01' SA_MM, #{map.inoutYear} SA_YY
							UNION
							SELECT '02' SA_MM,#{map.inoutYear} SA_YY
							UNION
							SELECT '03' SA_MM,#{map.inoutYear} SA_YY
							UNION
							SELECT '04' SA_MM,#{map.inoutYear} SA_YY
							UNION
							SELECT '05' SA_MM,#{map.inoutYear} SA_YY
							UNION
							SELECT '06' SA_MM,#{map.inoutYear} SA_YY
							UNION
							SELECT '07' SA_MM,#{map.inoutYear} SA_YY
							UNION
							SELECT '08' SA_MM,#{map.inoutYear} SA_YY
							UNION
							SELECT '09' SA_MM,#{map.inoutYear} SA_YY
							UNION
							SELECT '10' SA_MM,#{map.inoutYear} SA_YY
							UNION
							SELECT '11' SA_MM,#{map.inoutYear} SA_YY
							UNION
							SELECT '12' SA_MM,#{map.inoutYear} SA_YY) C
				 ON SUBSTRING(B.SA_DT, 1, 4) = C.SA_YY
				 AND SUBSTRING(B.SA_DT, 6, 2) = C.SA_MM
			        WHERE 1=1
				GROUP BY C.SA_YY,C.SA_MM
			) T GROUP BY saYy,saMm,saAmt
    </select>
    
    
    <!-- 기간별_연별_분기 -->
    <select id="itemDetailGroupByYearQuater" resultType="salesListVO" parameterType="hashMap" statementType="PREPARED">
    /*com.ppm.mes.domain.sa.sa400.SalesMapper.itemDetailGroupByYearQuater*/    
		SELECT 	 saYy,
				 saQt,
				 saAmt
		FROM (
			SELECT 		C.SA_YY saYy,
			    	   	C.SA_QT saQt,
				      	IFNULL(SUM(A.SUPPLY_AMT),0) saAmt
					FROM TB_MES_SA410 A 
					INNER JOIN TB_MES_SA400 B
						ON A.COMPANY = B.COMPANY
						AND A.SLIP_CD = B.SLIP_CD 
				   RIGHT OUTER JOIN
						(  SELECT '1' SA_QT, #{map.inoutYear} SA_YY
							UNION
							SELECT '2' SA_QT,#{map.inoutYear} SA_YY
							UNION
							SELECT '3' SA_QT,#{map.inoutYear} SA_YY
							UNION
							SELECT '4' SA_QT,#{map.inoutYear} SA_YY) C
				 ON SUBSTRING(B.SA_DT, 1, 4) = C.SA_YY
				 AND QUARTER(B.SA_DT) = C.SA_QT
			        WHERE 1=1
			    
				GROUP BY C.SA_YY,C.SA_QT
			) T GROUP BY saYy,saQt,saAmt
    </select>
    
    
    <!-- 기간별_지역별_연 -->
    <select id="itemDetailGroupByYearCust" resultType="salesListVO" parameterType="hashMap" statementType="PREPARED">
	/*com.ppm.mes.domain.sa.sa400.SalesMapper.itemDetailGroupByYearCust*/   
	SELECT 	custNm,
			saPrice1,
			saPrice2,
			saPrice3
		FROM (
			SELECT 
				C.CUST_NM custNm,
				SUM(CASE WHEN SUBSTRING(B.SLIP_DT, 1, 4) = #{map.inoutYear} THEN A.SUPPLY_AMT ELSE 0 END) AS saPrice1,
				SUM(CASE WHEN SUBSTRING(B.SLIP_DT, 1, 4) = #{map.inoutYear} - 1 THEN A.SUPPLY_AMT ELSE 0 END) AS saPrice2,
				SUM(CASE WHEN SUBSTRING(B.SLIP_DT, 1, 4) = #{map.inoutYear} - 2 THEN A.SUPPLY_AMT ELSE 0 END) AS saPrice3
			FROM TB_MES_SA410 A 
			INNER JOIN TB_MES_SA400 B
				ON A.COMPANY = B.COMPANY
				AND A.SLIP_CD = B.SLIP_CD 
		      	AND SUBSTRING(B.SA_DT, 1, 4) IN (#{map.inoutYear},#{map.inoutYear}-1,#{map.inoutYear}-2)
			INNER JOIN TB_MES_CUST000 C
				ON B.COMPANY = C.COMPANY
				AND B.CUST_CD = C.CUST_CD 
			WHERE 1=1
			GROUP BY C.CUST_NM
			) T GROUP BY custNm,
						 saPrice1,
						 saPrice2,
						 saPrice3
				ORDER BY custNm
    </select>
    
    
    <!-- 기간별_지역별_연월별 -->
    <select id="itemDetailGroupByMonthCust" resultType="salesListVO" parameterType="hashMap" statementType="PREPARED">
    /*com.ppm.mes.domain.sa.sa400.SalesMapper.itemDetailGroupByMonthCust*/    
		SELECT 	custNm,
				 saPrice1,
				 saPrice2,
				 saPrice3,
				 saPrice4,
				 saPrice5,
				 saPrice6,
				 saPrice7,
				 saPrice8,
				 saPrice9,
				 saPrice10,
				 saPrice11,
				 saPrice12
		FROM (
		SELECT 
			C.CUST_NM custNm,
			SUM(CASE WHEN SUBSTRING(B.SLIP_DT, 6, 2) = 1 THEN A.SUPPLY_AMT ELSE 0 END) AS saPrice1,
			SUM(CASE WHEN SUBSTRING(B.SLIP_DT, 6, 2) = 2 THEN A.SUPPLY_AMT ELSE 0 END) AS saPrice2,
			SUM(CASE WHEN SUBSTRING(B.SLIP_DT, 6, 2) = 3 THEN A.SUPPLY_AMT ELSE 0 END) AS saPrice3,
			SUM(CASE WHEN SUBSTRING(B.SLIP_DT, 6, 2) = 4 THEN A.SUPPLY_AMT ELSE 0 END) AS saPrice4,
			SUM(CASE WHEN SUBSTRING(B.SLIP_DT, 6, 2) = 5 THEN A.SUPPLY_AMT ELSE 0 END) AS saPrice5,
			SUM(CASE WHEN SUBSTRING(B.SLIP_DT, 6, 2) = 6 THEN A.SUPPLY_AMT ELSE 0 END) AS saPrice6,
			SUM(CASE WHEN SUBSTRING(B.SLIP_DT, 6, 2) = 7 THEN A.SUPPLY_AMT ELSE 0 END) AS saPrice7,
			SUM(CASE WHEN SUBSTRING(B.SLIP_DT, 6, 2) = 8 THEN A.SUPPLY_AMT ELSE 0 END) AS saPrice8,
			SUM(CASE WHEN SUBSTRING(B.SLIP_DT, 6, 2) = 9 THEN A.SUPPLY_AMT ELSE 0 END) AS saPrice9,
			SUM(CASE WHEN SUBSTRING(B.SLIP_DT, 6, 2) = 10 THEN A.SUPPLY_AMT ELSE 0 END) AS saPrice10,
			SUM(CASE WHEN SUBSTRING(B.SLIP_DT, 6, 2) = 11 THEN A.SUPPLY_AMT ELSE 0 END) AS saPrice11,
			SUM(CASE WHEN SUBSTRING(B.SLIP_DT, 6, 2) = 12 THEN A.SUPPLY_AMT ELSE 0 END) AS saPrice12
		FROM TB_MES_SA410 A 
		INNER JOIN TB_MES_SA400 B
			ON A.COMPANY = B.COMPANY
			AND A.SLIP_CD = B.SLIP_CD 
	      	AND SUBSTRING(B.SA_DT, 1, 4) = #{map.inoutYear}
		INNER JOIN TB_MES_CUST000 C
			ON B.COMPANY = C.COMPANY
			AND B.CUST_CD = C.CUST_CD 
		WHERE 1=1
		GROUP BY C.CUST_NM
		) T ORDER BY custNm
    </select>
    
    
    <!-- 기간별_거래처별 TOP20 -->
    <select id="itemDetailGroupByYearCust20" resultType="salesListVO" parameterType="hashMap" statementType="PREPARED">  
    /*com.ppm.mes.domain.sa.sa400.SalesMapper.itemDetailGroupByYearCust20*/  
			SELECT C.CUST_NM custNm,
				SUM(A.SUPPLY_AMT) saAmt	     
			FROM TB_MES_SA410 A 
			INNER JOIN TB_MES_SA400 B
				ON A.COMPANY = B.COMPANY
				AND A.SLIP_CD = B.SLIP_CD 
	      		AND SUBSTRING(B.SA_DT, 1, 4) = #{map.inoutYear}
			INNER JOIN TB_MES_CUST000 C
				ON B.COMPANY = C.COMPANY
				AND B.CUST_CD = C.CUST_CD 
			WHERE 1=1
			GROUP BY C.CUST_NM
			ORDER BY SUM(A.SUPPLY_AMT) DESC limit 20
    </select>
</mapper>